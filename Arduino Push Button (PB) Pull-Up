/*
 * Program Name: Push Button with Pull-Up
 * Goal:
 *   This program uses the internal pull-up resistor to read the state of a push button.
 *   It displays the button's state (pressed or not) as either HIGH or LOW on the Serial Monitor.
 *   When the button is pressed, the value will be LOW, and when it is released, the value will be HIGH.
 * 
 * Main Theme:
 *   The program demonstrates how to use an **internal pull-up resistor** with a push button.
 *   The button's state is read using `digitalRead()` and displayed on the **Serial Monitor**.
 * 
 * Hardware Connections:
 *   - The push button is connected between **pin 7** (digital input) and **GND**.
 *   - The **internal pull-up resistor** is enabled in the code, so no external resistor is needed.
 */

const int buttonPin = 7;  // Pin where the push button is connected

void setup() {
  // Start the Serial Monitor for displaying button state
  Serial.begin(9600);
  
  // Set the push button pin as input with internal pull-up resistor
  pinMode(buttonPin, INPUT_PULLUP);
}

void loop() {
  // Read the state of the push button
  int buttonState = digitalRead(buttonPin);
  
  // If button is pressed, state will be LOW (because the button connects the pin to GND)
  if (buttonState == LOW) {
    Serial.println("Button Pressed (LOW)");
  } 
  // If button is not pressed, state will be HIGH (due to the pull-up resistor)
  else {
    Serial.println("Button Not Pressed (HIGH)");
  }
  
  delay(500);  // Delay for 500ms before reading the button again
}
